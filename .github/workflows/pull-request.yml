# Workflow names are optional, but should be provided.
# They are displayed on GitHub when the action is run.
name: Hello world ‚ú®

# The `on` property configures the events that will trigger the workflow.
# In our case we want it to run when the `pull_request` event is triggered.
# In short, that means that the workflow will run when a pull request is
# either opened or updated (but not renamed or labeled ‚Äì code needs to
# be changed).
on:
  - pull_request

# Jobs are what actually do the work. We can add as many jobs as we want.
# These will be run in parallel.
jobs:
  job1:
    name: Job1
    runs-on: ubuntu-latest
    steps:
      - name: Lint check
        run: npm run lint:check
      - name: Lint Fix
        run: npm run lint:fix
  job2:
    name: Job1
    runs-on: ubuntu-latest
    steps:
      - name: Run test
        run: npm run test
  hello_world_job:
    # As with workflow names (and even step names), job names are not
    # strictly required, but they are good practice.
    name: Hello world üå±

    # There are many virtual machines we can run our jobs on. The most
    # common one is `ubuntu-latest`. See this page for a full list of
    # officially supported runners: https://github.com/actions/runner-images
    runs-on: ubuntu-latest

    # Each job can have multiple steps. These will be run in sequence.
    steps:
      - name: Print message to terminal
        run: echo "Hello üåè!"
  build:
    # As with workflow names (and even step names), job names are not
    # strictly required, but they are good practice.
    name: Build on ubuntu latest

    # There are many virtual machines we can run our jobs on. The most
    # common one is `ubuntu-latest`. See this page for a full list of
    # officially supported runners: https://github.com/actions/runner-images
    runs-on: ubuntu-latest

    # Each job can have multiple steps. These will be run in sequence.
    steps:
      - name: Checkout repository
        # To reference external workflows, we use the `uses` keyword.
        # The thing after the `@` is the version of the workflow, and
        # references a Git tag.
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build